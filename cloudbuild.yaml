options:
  # Allows bash-style string operations in substitutions to be interpreted
  dynamic_substitutions: true

# Default substitutions
substitutions:
  _IMAGE: 'gcr.io/${PROJECT_ID}/resume'

steps:
###########################################################
# Step 1: Install application dependencies
###########################################################
- name: node:10
  entrypoint: npm
  args: [
    'install',
    # The following option fixes an error where npm postinstall
    # fails with error "cannot run in wd" because npm is
    # trying to drop to an unprivileged user and failing.
    '--unsafe-perm']

###########################################################
# Step 2: Build the application
###########################################################
- name: node:10
  entrypoint: npm
  args: ['run', 'build']

###########################################################
# Step 3: Create the docker container
###########################################################
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t',
    '${_IMAGE}:${TAG_NAME}',
    '-t',
    '${_IMAGE}:latest',
    '.'
  ]

###########################################################
# Step 4: Push the image to the image repository
###########################################################
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_IMAGE}']


###########################################################
# Step 5: Deploy latest image to Cloud Run
###########################################################
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'run',
    'deploy',
    'resume',
    '--image', '${_IMAGE}:latest',
    '--revision-suffix', '${TAG_NAME}',
    '--region', 'us-central1',
    '--platform', 'managed',
    '--max-instances', '2',
    '--allow-unauthenticated'
  ]

# Display the image in the build results
images: ['${_IMAGE}']

# Tag the build
tags: ['resume']

